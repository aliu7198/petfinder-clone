"""empty message

Revision ID: 4dcc5cf68106
Revises:
Create Date: 2023-06-13 21:15:49.150915

"""
from alembic import op
import sqlalchemy as sa

import os
environment = os.getenv("FLASK_ENV")
SCHEMA = os.environ.get("SCHEMA")


# revision identifiers, used by Alembic.
revision = '4dcc5cf68106'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('hashed_password', sa.String(length=255), nullable=False),
    sa.Column('firstName', sa.String(length=30), nullable=True),
    sa.Column('lastName', sa.String(length=30), nullable=True),
    sa.Column('zipCode', sa.Integer(), nullable=False),
    sa.Column('phone', sa.Integer(), nullable=True),
    sa.Column('country', sa.String(length=100), nullable=True),
    sa.Column('address', sa.String(length=255), nullable=True),
    sa.Column('city', sa.String(length=255), nullable=True),
    sa.Column('state', sa.String(length=255), nullable=True),
    sa.Column('adoptionAgency', sa.Boolean(), nullable=False),
    sa.Column('orgName', sa.String(length=255), nullable=True),
    sa.Column('desiredPet', sa.String(), nullable=True),
    sa.Column('petOwner', sa.String(), nullable=True),
    sa.Column('kids', sa.Boolean(), nullable=True),
    sa.Column('ownerType', sa.String(), nullable=True),
    sa.Column('currentPets', sa.String(), nullable=True),
    sa.Column('agePref', sa.String(), nullable=True),
    sa.Column('genderPref', sa.String(), nullable=True),
    sa.Column('sizePref', sa.String(), nullable=True),
    sa.Column('specialNeeds', sa.Boolean(), nullable=True),
    sa.Column('breed', sa.String(), nullable=True),
    sa.Column('coatLengthPref', sa.String(), nullable=True),
    sa.Column('privateOutdoor', sa.String(), nullable=True),
    sa.Column('sharedOutdoor', sa.String(), nullable=True),
    sa.Column('leaseRestriction', sa.Boolean(), nullable=True),
    sa.Column('breedRestriction', sa.String(), nullable=True),
    sa.Column('sizeRestriction', sa.Integer(), nullable=True),
    sa.Column('activityLevelPref', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )

    if environment == "production":
      op.execute(f"ALTER TABLE users SET SCHEMA {SCHEMA};")

    op.create_table('animal_images',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('animalId', sa.Integer(), nullable=False),
    sa.Column('imageUrl', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['animalId'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )

    if environment == "production":
      op.execute(f"ALTER TABLE animal_images SET SCHEMA {SCHEMA};")

    op.create_table('animals',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('ownerId', sa.Integer(), nullable=False),
    sa.Column('type', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('age', sa.String(), nullable=False),
    sa.Column('gender', sa.String(), nullable=False),
    sa.Column('size', sa.String(), nullable=False),
    sa.Column('breed', sa.String(), nullable=False),
    sa.Column('color', sa.String(), nullable=True),
    sa.Column('characteristics', sa.String(), nullable=True),
    sa.Column('coatLength', sa.String(), nullable=True),
    sa.Column('houseTrained', sa.Boolean(), nullable=True),
    sa.Column('vaccinated', sa.Boolean(), nullable=True),
    sa.Column('fixed', sa.Boolean(), nullable=True),
    sa.Column('specialNeeds', sa.Boolean(), nullable=True),
    sa.Column('goodWith', sa.String(), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('adoptionFee', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('isPet', sa.Boolean(), nullable=False),
    sa.Column('birthDate', sa.Date(), nullable=True),
    sa.Column('origin', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['ownerId'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )

    if environment == "production":
      op.execute(f"ALTER TABLE animals SET SCHEMA {SCHEMA};")

    op.create_table('saved_searches',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('userId', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('type', sa.String(), nullable=False),
    sa.Column('breed', sa.String(), nullable=True),
    sa.Column('age', sa.String(), nullable=True),
    sa.Column('size', sa.String(), nullable=True),
    sa.Column('gender', sa.String(), nullable=True),
    sa.Column('goodWith', sa.String(), nullable=True),
    sa.Column('houseTrained', sa.Boolean(), nullable=True),
    sa.Column('specialNeeds', sa.Boolean(), nullable=True),
    sa.Column('coatLength', sa.String(), nullable=True),
    sa.Column('color', sa.String(), nullable=True),
    sa.Column('daysOnSite', sa.String(), nullable=True),
    sa.Column('orgName', sa.String(), nullable=True),
    sa.Column('petName', sa.String(), nullable=True),
    sa.Column('outOfTown', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['userId'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )

    if environment == "production":
      op.execute(f"ALTER TABLE saved_searches SET SCHEMA {SCHEMA};")

    op.create_table('favorites',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('animal_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['animal_id'], ['animals.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'animal_id')
    )

    if environment == "production":
      op.execute(f"ALTER TABLE favorites SET SCHEMA {SCHEMA};")

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('favorites')
    op.drop_table('saved_searches')
    op.drop_table('animals')
    op.drop_table('animal_images')
    op.drop_table('users')
    # ### end Alembic commands ###
