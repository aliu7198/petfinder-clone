"""create all tables

Revision ID: a989adeccb0f
Revises:
Create Date: 2023-06-27 19:45:17.983459

"""
from alembic import op
import sqlalchemy as sa

import os
environment = os.getenv("FLASK_ENV")
SCHEMA = os.environ.get("SCHEMA")

# revision identifiers, used by Alembic.
revision = 'a989adeccb0f'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('hashed_password', sa.String(length=255), nullable=False),
    sa.Column('first_name', sa.String(length=30), nullable=True),
    sa.Column('last_name', sa.String(length=30), nullable=True),
    sa.Column('zip_code', sa.Integer(), nullable=True),
    sa.Column('phone', sa.Integer(), nullable=True),
    sa.Column('country', sa.String(length=100), nullable=True),
    sa.Column('address', sa.String(length=255), nullable=True),
    sa.Column('city', sa.String(length=255), nullable=True),
    sa.Column('state', sa.String(length=255), nullable=True),
    sa.Column('adoption_agency', sa.Boolean(), nullable=False),
    sa.Column('org_name', sa.String(length=255), nullable=True),
    sa.Column('desired_pet', sa.String(length=50), nullable=True),
    sa.Column('pet_owner', sa.String(length=50), nullable=True),
    sa.Column('kids', sa.Boolean(), nullable=True),
    sa.Column('owner_type', sa.String(length=50), nullable=True),
    sa.Column('current_pets', sa.String(length=50), nullable=True),
    sa.Column('age_pref', sa.String(length=10), nullable=True),
    sa.Column('gender_pref', sa.String(length=10), nullable=True),
    sa.Column('size_pref', sa.String(length=15), nullable=True),
    sa.Column('special_needs', sa.Boolean(), nullable=True),
    sa.Column('breed', sa.String(length=100), nullable=True),
    sa.Column('private_outdoor', sa.String(length=100), nullable=True),
    sa.Column('shared_outdoor', sa.String(length=100), nullable=True),
    sa.Column('lease_restriction', sa.Boolean(), nullable=True),
    sa.Column('breed_restriction', sa.String(length=2000), nullable=True),
    sa.Column('size_restriction', sa.Integer(), nullable=True),
    sa.Column('activity_level_pref', sa.String(length=25), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )

    if environment == "production":
        op.execute(f"ALTER TABLE users SET SCHEMA {SCHEMA};")

    op.create_table('animals',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('owner_id', sa.Integer(), nullable=False),
    sa.Column('type', sa.String(length=50), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('age', sa.String(length=10), nullable=False),
    sa.Column('gender', sa.String(length=10), nullable=False),
    sa.Column('size', sa.String(length=15), nullable=False),
    sa.Column('primary_breed', sa.String(length=50), nullable=False),
    sa.Column('secondary_breed', sa.String(length=50), nullable=True),
    sa.Column('color', sa.String(length=50), nullable=True),
    sa.Column('house_trained', sa.Boolean(), nullable=True),
    sa.Column('vaccinated', sa.Boolean(), nullable=True),
    sa.Column('fixed', sa.Boolean(), nullable=True),
    sa.Column('special_needs', sa.Boolean(), nullable=True),
    sa.Column('good_with_cats', sa.Boolean(), nullable=True),
    sa.Column('good_with_dogs', sa.Boolean(), nullable=True),
    sa.Column('good_with_children', sa.Boolean(), nullable=True),
    sa.Column('good_with_other_animals', sa.Boolean(), nullable=True),
    sa.Column('description', sa.String(length=2000), nullable=True),
    sa.Column('adoption_fee', sa.Numeric(scale=2), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['owner_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )

    if environment == "production":
        op.execute(f"ALTER TABLE animals SET SCHEMA {SCHEMA};")

    op.create_table('saved_searches',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=100), nullable=False),
    sa.Column('type', sa.String(length=50), nullable=False),
    sa.Column('breed', sa.String(length=50), nullable=True),
    sa.Column('age', sa.String(length=10), nullable=True),
    sa.Column('size', sa.String(length=15), nullable=True),
    sa.Column('gender', sa.String(length=10), nullable=True),
    sa.Column('good_with_cats', sa.Boolean(), nullable=True),
    sa.Column('good_with_dogs', sa.Boolean(), nullable=True),
    sa.Column('good_with_children', sa.Boolean(), nullable=True),
    sa.Column('good_with_other_animals', sa.Boolean(), nullable=True),
    sa.Column('house_trained', sa.Boolean(), nullable=True),
    sa.Column('special_needs', sa.Boolean(), nullable=True),
    sa.Column('color', sa.String(length=50), nullable=True),
    sa.Column('pet_name', sa.String(length=100), nullable=True),
    sa.Column('out_of_town', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )

    if environment == "production":
        op.execute(f"ALTER TABLE saved_searches SET SCHEMA {SCHEMA};")

    op.create_table('animal_images',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('animal_id', sa.Integer(), nullable=False),
    sa.Column('image_url', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['animal_id'], ['animals.id'], ),
    sa.PrimaryKeyConstraint('id')
    )

    if environment == "production":
        op.execute(f"ALTER TABLE animal_images SET SCHEMA {SCHEMA};")

    op.create_table('favorites',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('animal_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['animal_id'], ['animals.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'animal_id')
    )

    if environment == "production":
        op.execute(f"ALTER TABLE favorites SET SCHEMA {SCHEMA};")
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('favorites')
    op.drop_table('animal_images')
    op.drop_table('saved_searches')
    op.drop_table('animals')
    op.drop_table('users')
    # ### end Alembic commands ###
